/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExemploInterface05;

import java.awt.Font;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;

/**
 *
 * @author samue
 */
public class FormSelecao extends javax.swing.JFrame {

   
    private int estilo;
    
    public FormSelecao() {
        initComponents();
        configurarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEstilo = new javax.swing.JLabel();
        lblFonte = new javax.swing.JLabel();
        ckbNegrito = new javax.swing.JCheckBox();
        ckbItalico = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTxt = new javax.swing.JTextArea();
        rdbArial = new javax.swing.JCheckBox();
        rdbTimes = new javax.swing.JCheckBox();
        rdbTahoma = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEstilo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblEstilo.setText("Estilo");

        lblFonte.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblFonte.setText("Fonte");

        ckbNegrito.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckbNegrito.setText("Negrito");
        ckbNegrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbNegritoActionPerformed(evt);
            }
        });

        ckbItalico.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ckbItalico.setText("Italico");
        ckbItalico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbItalicoActionPerformed(evt);
            }
        });

        txtTxt.setColumns(20);
        txtTxt.setLineWrap(true);
        txtTxt.setRows(5);
        txtTxt.setText("Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop.");
        jScrollPane1.setViewportView(txtTxt);

        rdbArial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbArial.setText("Arial");
        rdbArial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArialActionPerformed(evt);
            }
        });

        rdbTimes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbTimes.setText("Times");
        rdbTimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTimesActionPerformed(evt);
            }
        });

        rdbTahoma.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rdbTahoma.setText("Tahoma");
        rdbTahoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTahomaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFonte)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblEstilo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ckbNegrito, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(rdbArial))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rdbTahoma)
                                        .addGap(32, 32, 32)
                                        .addComponent(rdbTimes))
                                    .addComponent(ckbItalico))))
                        .addGap(0, 202, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEstilo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbNegrito)
                    .addComponent(ckbItalico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFonte)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbArial)
                    .addComponent(rdbTahoma)
                    .addComponent(rdbTimes))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ckbItalicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbItalicoActionPerformed
       trocarEstilo();
    }//GEN-LAST:event_ckbItalicoActionPerformed

    private void rdbArialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArialActionPerformed
       trocarFonte();
    }//GEN-LAST:event_rdbArialActionPerformed

    private void rdbTahomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTahomaActionPerformed
        trocarFonte();
    }//GEN-LAST:event_rdbTahomaActionPerformed

    private void rdbTimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTimesActionPerformed
      trocarFonte();
    }//GEN-LAST:event_rdbTimesActionPerformed

    private void ckbNegritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckbNegritoActionPerformed
        trocarEstilo();
    }//GEN-LAST:event_ckbNegritoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormSelecao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormSelecao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckbItalico;
    private javax.swing.JCheckBox ckbNegrito;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEstilo;
    private javax.swing.JLabel lblFonte;
    private javax.swing.JCheckBox rdbArial;
    private javax.swing.JCheckBox rdbTahoma;
    private javax.swing.JCheckBox rdbTimes;
    private javax.swing.JTextArea txtTxt;
    // End of variables declaration//GEN-END:variables
private void configurarFormulario(){
        this.setTitle("Fontes e Estilos");
        this.setResizable(true);
        this.setLocationRelativeTo(null);
        
        //Definir a seleção do RadioButton como
        //mutuamente exclusiva.
        ButtonGroup bg = new ButtonGroup();
        bg.add(rdbArial);
        bg.add(rdbTahoma);
        bg.add(rdbTimes);
        
        //Iniciar com rdbArial selecionado
        rdbArial.setSelected(true);
        
        estilo = Font.PLAIN;
        //Aplicar a fonte na Área de Texto
       trocarFonte();
    }
private void trocarFonte(){
 String fonte = "";
 
 if(rdbArial.isSelected()){
     fonte = "Arial";
 }
 if(rdbTahoma.isSelected()){
     fonte = "Tahoma";
 }
 if(rdbTimes.isSelected()){
     fonte = "Times New Roman";
 }
 
    txtTxt.setFont(
            new Font(fonte,estilo, 14)
        );
 
}
private void trocarEstilo(){
     if (ckbNegrito.isSelected() && ckbItalico.isSelected() ){
            estilo = Font.BOLD + Font.ITALIC;   //negrito + itálico
        }else if (!ckbNegrito.isSelected() && !ckbItalico.isSelected() ){
            estilo = Font.PLAIN;
        }else if (ckbNegrito.isSelected()){
            estilo = Font.BOLD;
        }else if (ckbItalico.isSelected()){
            estilo = Font.ITALIC;
        }
        
        trocarFonte();

}
}
